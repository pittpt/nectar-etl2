version: '2'

networks:
  rmoff_kafka:
    name: rmoff_kafka

services:

  nectar-api:
    build: 
      context: ./Nectar-api
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    expose:
      - 3000
    restart: always
    networks:
      - rmoff_kafka
    

  hosxp:
    build: 
      context: ./hosxp-etl
      dockerfile: Dockerfile
    depends_on:
      - db
      - broker
    networks:
      - rmoff_kafka
    restart: always

  hos_consumer:
    build: 
      context: ./hos-consumer
      dockerfile: Dockerfile
    depends_on:
      - hosxp
      - hosos
      - db
      - broker
    networks:
      - rmoff_kafka

  hosos:
    build: 
      context: ./hosos-etl
      dockerfile: Dockerfile
    depends_on:
      - db
      - broker
    networks:
      - rmoff_kafka

  db:
    image: 'mysql:8.0.32-debian'
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      # So you don't have to use root, but you can if you like
      MYSQL_USER: 'user'
      # You can use whatever password you like
      MYSQL_PASSWORD: 'password'
      # Password for root access
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      # <Port exposed> : < MySQL Port running inside container>
      - '3306:3306'
    expose:
      # Opens port 3306 on the container
      - '3306'
      # Where our data will be persisted
    volumes:
      - ./db-data/mysql:/var/lib/mysql
    networks:
      - rmoff_kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - rmoff_kafka

  broker:
    image: confluentinc/cp-kafka:7.3.2
    container_name: broker
    restart: always
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - rmoff_kafka